README

This code is written in C and is intended to run on STM32F103ZG microcontroller. The purpose of this code is to control a ball height control system using a PWM signal generated by the microcontroller. It uses the FreeRTOS real-time operating system to manage multiple tasks concurrently.

The code initializes several components of the microcontroller including PWM, ADC, and UART. It then creates two tasks: Mode_task and Cli_Task. The Mode_task is responsible for selecting a specific mode of operation, and Cli_Task is responsible for handling user input. The Mode_task handles the user input to select between automatic and manual modes. In automatic mode, the ADC value is continuously read and the duty cycle of the PWM signal is adjusted to maintain a setpoint value. The setpoint value for stable control is recommended at 1500 counts. In manual mode, the user can adjust the duty cycle of the PWM signal using the "A" and "L" keys and reset the system using the "0" key.

A message queue is created to pass information between the tasks. The mode selection message queue has a length of one and a size of one byte. The tasks are created using the xTaskCreate function provided by FreeRTOS.

Finally, the function vTaskStartScheduler is called to begin scheduling tasks. The main function then enters an infinite loop to ensure that it never returns.

To use this code, you will need to have an appropriate STM32F103 development board and a ball height control system connected to the PWM output. You will also need a terminal program to communicate with the microcontroller via UART. This code assumes that the terminal program is configured to use 115200 baud, 8 data bits, no parity, and 1 stop bit.

Note that this code is provided as-is and may need to be modified for your specific application. It is recommended that you have a good understanding of C programming and microcontroller programming before attempting to use this code.